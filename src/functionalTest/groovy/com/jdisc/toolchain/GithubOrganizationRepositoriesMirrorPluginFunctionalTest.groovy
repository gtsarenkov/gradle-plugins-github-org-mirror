/*
 * This source file was generated by the Gradle 'init' task
 */
package com.jdisc.toolchain

import spock.lang.Specification
import spock.lang.TempDir
import org.gradle.testkit.runner.GradleRunner

/**
 * A simple functional test for the 'com.jdisc.toolchain.github-organization-repo-mirror' plugin.
 */
class GithubOrganizationRepositoriesMirrorPluginFunctionalTest extends Specification {
    @TempDir
    private File projectDir

    private getBuildFile() {
        new File(projectDir, "build.gradle")
    }

    private getSettingsFile() {
        new File(projectDir, "settings.gradle")
    }

    def "can run task"() {
        given:
        settingsFile << ""
        buildFile << """
plugins {
    id('com.jdisc.toolchain.github-organization-repo-mirror')
}

cloneAndMirrorRepos {
    githubOrg="gitblit-org"
    skipClone=true
}
"""

        when:
        def runner = GradleRunner.create()
        runner.forwardOutput()
        runner.withDebug(true)
        runner.withPluginClasspath()
        runner.withArguments("--debug", "--stacktrace", "cloneAndMirrorRepos")
        runner.withProjectDir(projectDir)
        def result = runner.build()

        then:
        result.output.contains("Executing: git clone --mirror ")
    }
}
